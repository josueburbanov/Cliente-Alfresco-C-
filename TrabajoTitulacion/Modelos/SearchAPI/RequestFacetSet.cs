// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace TrabajoTitulacion.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// The interval to Set
    /// </summary>
    public partial class RequestFacetSet
    {
        /// <summary>
        /// Initializes a new instance of the RequestFacetSet class.
        /// </summary>
        public RequestFacetSet() { }

        /// <summary>
        /// Initializes a new instance of the RequestFacetSet class.
        /// </summary>
        public RequestFacetSet(string label = default(string), string start = default(string), string end = default(string), bool? startInclusive = default(bool?), bool? endInclusive = default(bool?))
        {
            Label = label;
            Start = start;
            End = end;
            StartInclusive = startInclusive;
            EndInclusive = endInclusive;
        }

        /// <summary>
        /// A label to use to identify the set
        /// </summary>
        [JsonProperty(PropertyName = "label")]
        public string Label { get; set; }

        /// <summary>
        /// The start of the range
        /// </summary>
        [JsonProperty(PropertyName = "start")]
        public string Start { get; set; }

        /// <summary>
        /// The end of the range
        /// </summary>
        [JsonProperty(PropertyName = "end")]
        public string End { get; set; }

        /// <summary>
        /// When true, the set will include values greater or equal to "start"
        /// </summary>
        [JsonProperty(PropertyName = "startInclusive")]
        public bool? StartInclusive { get; set; }

        /// <summary>
        /// When true, the set will include values less than or equal to "end"
        /// </summary>
        [JsonProperty(PropertyName = "endInclusive")]
        public bool? EndInclusive { get; set; }

    }
}
