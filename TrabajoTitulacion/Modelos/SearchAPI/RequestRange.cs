// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace TrabajoTitulacion.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// Facet range
    /// </summary>
    public partial class RequestRange
    {
        /// <summary>
        /// Initializes a new instance of the RequestRange class.
        /// </summary>
        public RequestRange() { }

        /// <summary>
        /// Initializes a new instance of the RequestRange class.
        /// </summary>
        public RequestRange(string field = default(string), string start = default(string), string end = default(string), string gap = default(string), bool? hardend = default(bool?), IList<string> other = default(IList<string>), IList<string> include = default(IList<string>), string label = default(string), IList<string> excludeFilters = default(IList<string>))
        {
            Field = field;
            Start = start;
            End = end;
            Gap = gap;
            Hardend = hardend;
            Other = other;
            Include = include;
            Label = label;
            ExcludeFilters = excludeFilters;
        }

        /// <summary>
        /// The name of the field to perform range
        /// </summary>
        [JsonProperty(PropertyName = "field")]
        public string Field { get; set; }

        /// <summary>
        /// The start of the range
        /// </summary>
        [JsonProperty(PropertyName = "start")]
        public string Start { get; set; }

        /// <summary>
        /// The end of the range
        /// </summary>
        [JsonProperty(PropertyName = "end")]
        public string End { get; set; }

        /// <summary>
        /// Bucket size
        /// </summary>
        [JsonProperty(PropertyName = "gap")]
        public string Gap { get; set; }

        /// <summary>
        /// If true means that the last bucket will end at “end” even if it is
        /// less than “gap” wide.
        /// </summary>
        [JsonProperty(PropertyName = "hardend")]
        public bool? Hardend { get; set; }

        /// <summary>
        /// before, after, between, non, all
        /// </summary>
        [JsonProperty(PropertyName = "other")]
        public IList<string> Other { get; set; }

        /// <summary>
        /// lower, upper, edge, outer, all
        /// </summary>
        [JsonProperty(PropertyName = "include")]
        public IList<string> Include { get; set; }

        /// <summary>
        /// A label to include as a pivot reference
        /// </summary>
        [JsonProperty(PropertyName = "label")]
        public string Label { get; set; }

        /// <summary>
        /// Filter queries to exclude when calculating statistics
        /// </summary>
        [JsonProperty(PropertyName = "excludeFilters")]
        public IList<string> ExcludeFilters { get; set; }

    }
}
