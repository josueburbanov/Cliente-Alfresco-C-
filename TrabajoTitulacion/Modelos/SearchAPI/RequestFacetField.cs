// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace TrabajoTitulacion.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// A simple facet field
    /// </summary>
    public partial class RequestFacetField
    {
        /// <summary>
        /// Initializes a new instance of the RequestFacetField class.
        /// </summary>
        public RequestFacetField() { }

        /// <summary>
        /// Initializes a new instance of the RequestFacetField class.
        /// </summary>
        public RequestFacetField(string field = default(string), string label = default(string), string prefix = default(string), string sort = default(string), string method = default(string), bool? missing = default(bool?), int? limit = default(int?), int? offset = default(int?), int? mincount = default(int?), int? facetEnumCacheMinDf = default(int?), IList<string> excludeFilters = default(IList<string>))
        {
            Field = field;
            Label = label;
            Prefix = prefix;
            Sort = sort;
            Method = method;
            Missing = missing;
            Limit = limit;
            Offset = offset;
            Mincount = mincount;
            FacetEnumCacheMinDf = facetEnumCacheMinDf;
            ExcludeFilters = excludeFilters;
        }

        /// <summary>
        /// The facet field
        /// </summary>
        [JsonProperty(PropertyName = "field")]
        public string Field { get; set; }

        /// <summary>
        /// A label to include in place of the facet field
        /// </summary>
        [JsonProperty(PropertyName = "label")]
        public string Label { get; set; }

        /// <summary>
        /// Restricts the possible constraints to only indexed values with a
        /// specified prefix.
        /// </summary>
        [JsonProperty(PropertyName = "prefix")]
        public string Prefix { get; set; }

        /// <summary>
        /// Possible values include: 'COUNT', 'INDEX'
        /// </summary>
        [JsonProperty(PropertyName = "sort")]
        public string Sort { get; set; }

        /// <summary>
        /// Possible values include: 'ENUM', 'FC'
        /// </summary>
        [JsonProperty(PropertyName = "method")]
        public string Method { get; set; }

        /// <summary>
        /// When true, count results that match the query but which have no
        /// facet value for the field (in addition to the Term-based
        /// constraints).
        /// </summary>
        [JsonProperty(PropertyName = "missing")]
        public bool? Missing { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "limit")]
        public int? Limit { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "offset")]
        public int? Offset { get; set; }

        /// <summary>
        /// The minimum count required for a facet field to be included in the
        /// response.
        /// </summary>
        [JsonProperty(PropertyName = "mincount")]
        public int? Mincount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "facetEnumCacheMinDf")]
        public int? FacetEnumCacheMinDf { get; set; }

        /// <summary>
        /// Filter Queries with tags listed here will not be included in facet
        /// counts.
        /// This is used for multi-select facetting.
        /// </summary>
        [JsonProperty(PropertyName = "excludeFilters")]
        public IList<string> ExcludeFilters { get; set; }

    }
}
